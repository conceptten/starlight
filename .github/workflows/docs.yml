---
name: Docs

on: # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      SUBDIR:
        description: starlight docs subdir (in case of monorepo)
        required: false
        default: ""
        type: string
    secrets:
      SCP_HOST:
        description: hetzner cloud storage-box scp host
        required: true
      SCP_USER:
        description: hetzner cloud storage-box scp user
        required: true
      SCP_PASS:
        description: hetzner cloud storage-box scp password
        required: true

jobs:
  eslint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup nodejs
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --shamefully-hoist

      - name: Install global dependencies
        run: npm install -g ts-node

      - name: Run tests
        run: pnpm test

      - name: Run linters
        run: pnpm lint

  yamllint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Run yamllint
        uses: frenck/action-yamllint@v1

  build:
    runs-on: ubuntu-latest
    needs:
      - eslint
      - yamllint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup nodejs
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --shamefully-hoist

      - name: Build docs
        run: pnpm build

      - name: Create docs archive
        run: |
          mv ./${{ inputs.SUBDIR }}/dist ./${{ github.event.repository.name }}
          tar -czf \
            "${{ github.event.repository.name }}-${{ github.ref_name }}.tar.gz" \
            "./${{ github.event.repository.name }}"

      - name: Deploy Staging docs
        if: ${{ github.ref == 'refs/heads/dev' }}
        run: |
          sshpass -p "${{ secrets.SCP_PASS }}" \
            scp -r -o "StrictHostKeyChecking=no" \
            "${{ github.event.repository.name }}-${{ github.ref_name }}.tar.gz" \
            "${{ secrets.SCP_USER }}@${{ secrets.SCP_HOST }}:"

      - name: Deploy Production docs
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          sshpass -p "${{ secrets.SCP_PASS }}" \
            scp -r -o "StrictHostKeyChecking=no" \
            "${{ github.event.repository.name }}-${{ github.ref_name }}.tar.gz" \
            "${{ secrets.SCP_USER }}@${{ secrets.SCP_HOST }}:"
